{"ast":null,"code":"var _jsxFileName = \"/Users/alicegurova/art-pactice/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_11/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport * as drumsSettings from './tunes/drums.js';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nimport Surface from './components/Surface';\nvar bassSynth;\nvar bassChorus;\nvar bassPingPongDelay;\nvar melodySynth;\nvar melodyChorus;\nvar melodyPingPongDelay;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          drumsSettings = _this$state.drumsSettings; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      var bassPart = new Tone.Part(function (time, note) {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = bassSettings.sequence.loop; //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = melodySettings.sequence.loop; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: 'clap-808.wav',\n          A2: 'clap-analog.wav'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      }).toDestination();\n      var drumsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequence.steps).start(0);\n      drumsPart.loopEnd = drumsSettings.sequence.duration;\n      drumsPart.loop = drumsSettings.sequence.loop;\n      Tone.Transport.start();\n\n      _this.setState({\n        isStarted: true\n      });\n    };\n\n    _this.handleBassValueChange = function (property, value) {\n      var bassSettings = _this.state.bassSettings;\n\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        bassChorus.wet.value = value;\n        bassSettings.chorus.wet = value;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings\n      });\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'delaySurface') {\n        melodyPingPongDelay.delayTime.value = value.x;\n        melodySettings.pingPongDelay.delayTime = value.x;\n        melodyPingPongDelay.maxDelayTime = value.y;\n        melodySettings.pingPongDelay.maxDelayTime = value.y;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'melodyChorusSpread') {\n        melodyChorus.spread = value;\n        melodySettings.chorus.spread = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.renderStartButton = function () {\n      return /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Art Design & Coding Community\",\n        handleClick: _this.handleStart,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.renderShowHideButton = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggleUIButton\",\n        onClick: _this.handleToggleUIShow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 7\n        }\n      }, \"Show/Hide UI\");\n    };\n\n    _this.state = {\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      drumsSettings: drumsSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          bassSettings = _this$state2.bassSettings,\n          melodySettings = _this$state2.melodySettings,\n          drumsSettings = _this$state2.drumsSettings;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Art Design & Coding Community\",\n        handleClick: this.handleStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Delay Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.pingPongDelay.wet,\n        property: \"pingPongDelayWet\",\n        handleChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Chorus Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.chorus.wet,\n        property: \"chorusWet\",\n        handleChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Surface, {\n        minX: \"0\",\n        maxX: \"1\",\n        stepX: \"0.01\",\n        valueX: melodySettings.PingPongDelay.delayTime,\n        minY: \"0\",\n        maxY: \"1\",\n        stepY: \"0.01\",\n        valueY: melodySettings.PingPongDelay.maxDelayTime,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","drumsSettings","ToneSynth","SC_Button","SC_Slider","Surface","bassSynth","bassChorus","bassPingPongDelay","melodySynth","melodyChorus","melodyPingPongDelay","Container","props","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","melodyPart","sampler","Sampler","urls","A1","A2","baseUrl","drumsPart","Transport","setState","isStarted","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","wet","handleMelodyValueChange","delayTime","x","maxDelayTime","y","spread","renderStartButton","renderShowHideButton","handleToggleUIShow"],"sources":["/Users/alicegurova/art-pactice/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_11/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\nimport * as drumsSettings from './tunes/drums.js'\n\nimport ToneSynth from './modules/ToneSynth.jsx'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\nimport Surface from './components/Surface'\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bassSettings,\n      melodySettings,\n      drumsSettings\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = bassSettings.sequence.loop\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = melodySettings.sequence.loop\n    //\n    //\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: 'clap-808.wav',\n        A2: 'clap-analog.wav'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    }).toDestination()\n\n    const drumsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequence.steps).start(0)\n\n    drumsPart.loopEnd = drumsSettings.sequence.duration\n    drumsPart.loop = drumsSettings.sequence.loop\n\n    Tone.Transport.start()\n\n    this.setState({\n      isStarted: true\n    })\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      bassChorus.wet.value = value\n      bassSettings.chorus.wet = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'delaySurface') {\n      melodyPingPongDelay.delayTime.value = value.x\n      melodySettings.pingPongDelay.delayTime = value.x\n      melodyPingPongDelay.maxDelayTime = value.y\n      melodySettings.pingPongDelay.maxDelayTime = value.y\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'melodyChorusSpread') {\n      melodyChorus.spread = value\n      melodySettings.chorus.spread = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  renderStartButton = () => {\n    return (\n      <SC_Button\n        text=\"Art Design & Coding Community\"\n        handleClick={this.handleStart}\n      />\n    )\n  }\n\n  renderShowHideButton = () => {\n    return (\n      <div className=\"toggleUIButton\" onClick={this.handleToggleUIShow}>\n        Show/Hide UI\n      </div>\n    )\n  }\n\n  render() {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    return (\n      <div className=\"Container\">\n        <SC_Button\n          text=\"Art Design & Coding Community\"\n          handleClick={this.handleStart}\n        />\n\n        <SC_Slider\n          name=\"Delay Wet\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={bassSettings.pingPongDelay.wet}\n          property=\"pingPongDelayWet\"\n          handleChange={this.handleBassValueChange}\n        />\n\n        <SC_Slider\n          name=\"Chorus Wet\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={bassSettings.chorus.wet}\n          property=\"chorusWet\"\n          handleChange={this.handleBassValueChange}\n        />\n\n        <Surface\n          minX=\"0\"\n          maxX=\"1\"\n          stepX=\"0.01\"\n          valueX={melodySettings.PingPongDelay.delayTime}\n          minY=\"0\"\n          maxY=\"1\"\n          stepY=\"0.01\"\n          valueY={melodySettings.PingPongDelay.maxDelayTime}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n\n        <ToneSynth\n          settings={bassSettings}\n          handleValueChange={this.handleBassValueChange}\n        />\n        <ToneSynth\n          settings={melodySettings}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}