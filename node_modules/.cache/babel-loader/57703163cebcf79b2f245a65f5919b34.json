{"ast":null,"code":"import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Merge } from \"./Merge\";\n/**\n * Mono coerces the incoming mono or stereo signal into a mono signal\n * where both left and right channels have the same value. This can be useful\n * for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n * @category Component\n */\n\nexport class Mono extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Mono.getDefaults(), arguments));\n    this.name = \"Mono\";\n    this.input = new Gain({\n      context: this.context\n    });\n    this._merge = this.output = new Merge({\n      channels: 2,\n      context: this.context\n    });\n    this.input.connect(this._merge, 0, 0);\n    this.input.connect(this._merge, 0, 1);\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._merge.dispose();\n\n    this.input.dispose();\n    return this;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}