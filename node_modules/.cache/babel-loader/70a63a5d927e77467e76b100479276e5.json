{"ast":null,"code":"var _jsxFileName = \"/Users/alicegurova/art-pactice/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_10/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as banjoSettings from './tunes/banjo.js';\nimport * as melodySettings from './tunes/melody.js';\nimport Channel from './modules/Channel.jsx';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_ToggleButton from './components/SC_ToggleButton';\nimport SC_ToggleButtonSet from './components/SC_ToggleButtonSet';\nimport SC_Slider from './components/SC_Slider';\nvar banjoChannel;\nvar melodySynth;\nvar melodyChorus;\nvar melodyAutoFilter;\nvar melodyChannel;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          banjoSettings = _this$state.banjoSettings,\n          melodySettings = _this$state.melodySettings;\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyAutoFilter = new Tone.AutoFilter(melodySettings.autoFilter).start();\n      melodyChannel = new Tone.Channel(melodySettings.channel).toDestination();\n      melodySynth.chain(melodyChorus, melodyAutoFilter, melodyChannel);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true;\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: 'koto-japanese-melody-strings-loop_123bpm_D_minor.wav',\n          A2: 'spanish-guitar-koto-arp-loop_234bpm_F_minor.wav',\n          A3: 'sharingan-koto-melody_130bpm_A_minor.wav',\n          B1: 'spanish-guitar-koto-arp-loop_234bpm_F_minor.wav'\n        },\n        baseUrl: 'http://localhost:3000/samples/'\n      }).toDestination();\n      banjoChannel = new Tone.Channel(banjoSettings.channel).toDestination();\n      sampler.chain(banjoChannel);\n      var banjoPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, banjoSettings.sequence.steps).start(0);\n      banjoPart.loopEnd = banjoSettings.sequence.duration;\n      banjoPart.loop = true;\n      Tone.Transport.start();\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'chorusFrequency') {\n        melodyChorus.frequency.value = value;\n        melodySettings.chorus.frequency = value;\n      } else if (property === 'chorusDepth') {\n        melodyChorus.depth = value;\n        melodySettings.chorus.depth = value;\n      } else if (property === 'autoFilterType') {\n        melodyAutoFilter.type = value;\n        melodySettings.autoFilter.type = value;\n      } else if (property === 'autoFilterFrequency') {\n        melodyAutoFilter.frequency.value = value;\n        melodySettings.autoFilter.frequency = value;\n      } else if (property === 'autoFilterDepth') {\n        melodyAutoFilter.depth.value = value;\n        melodySettings.autoFilter.depth = value;\n      } else if (property === 'autoFilterOctaves') {\n        melodyAutoFilter.octaves = value;\n        melodySettings.autoFilter.octaves = value;\n      }\n\n      if (property === 'channelVolume') {\n        melodyChannel.volume.value = value;\n        melodySettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        melodyChannel.mute = value;\n        melodySettings.channel.mute = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleBanjoValueChange = function (property, value) {\n      var banjoSettings = _this.state.banjoSettings;\n\n      if (property === 'channelVolume') {\n        banjoChannel.volume.value = value;\n        banjoSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        var mute = !banjoSettings.channel.mute;\n        banjoChannel.mute = mute;\n        banjoSettings.channel.mute = mute;\n      }\n\n      _this.setState({\n        banjoSettings: banjoSettings\n      });\n    };\n\n    _this.state = {\n      banjoSettings: banjoSettings,\n      melodySettings: melodySettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          banjoSettings = _this$state2.banjoSettings,\n          melodySettings = _this$state2.melodySettings;\n      var melodyOscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']; //this.updateNodeParams()\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Start\",\n        handleClick: this.handleStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Channel, {\n        settings: banjoSettings,\n        handleValueChange: this.handleBanjoValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Channel, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: melodySettings.chorus.wet,\n        property: \"chorusWet\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Frequency\",\n        min: 0,\n        max: 100,\n        step: 0.01,\n        value: melodySettings.chorus.frequency,\n        property: \"chorusFrequency\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Depth\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: melodySettings.chorus.depth,\n        property: \"chorusDepth\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_ToggleButtonSet, {\n        name: \"Type\",\n        property: \"autoFilterType\",\n        value: melodySettings.autoFilter.type,\n        options: melodyOscillatorTypes,\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Frequency\",\n        min: 0,\n        max: 100,\n        step: 0.01,\n        value: melodySettings.autoFilter.frequency,\n        property: \"autoFilterFrequency\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Depth\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: melodySettings.autoFilter.depth,\n        property: \"autoFilterDepth\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Octaves\",\n        min: 0,\n        max: 6,\n        step: 0.1,\n        value: melodySettings.autoFilter.octaves,\n        property: \"autoFilterOctaves\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","banjoSettings","melodySettings","Channel","ToneSynth","SC_Button","SC_ToggleButton","SC_ToggleButtonSet","SC_Slider","banjoChannel","melodySynth","melodyChorus","melodyAutoFilter","melodyChannel","Container","props","handleStart","state","Synth","synth","Chorus","chorus","start","AutoFilter","autoFilter","channel","toDestination","chain","melodyPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","sampler","Sampler","urls","A1","A2","A3","B1","baseUrl","banjoPart","Transport","handleMelodyValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","wet","frequency","depth","octaves","volume","mute","setState","handleBanjoValueChange","melodyOscillatorTypes"],"sources":["/Users/alicegurova/art-pactice/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_10/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as banjoSettings from './tunes/banjo.js'\nimport * as melodySettings from './tunes/melody.js'\n\nimport Channel from './modules/Channel.jsx'\nimport ToneSynth from './modules/ToneSynth.jsx'\nimport SC_Button from './components/SC_Button'\nimport SC_ToggleButton from './components/SC_ToggleButton'\nimport SC_ToggleButtonSet from './components/SC_ToggleButtonSet'\n\nimport SC_Slider from './components/SC_Slider'\n\nlet banjoChannel\n\nlet melodySynth\nlet melodyChorus\nlet melodyAutoFilter\nlet melodyChannel\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      banjoSettings,\n      melodySettings\n    }\n  }\n\n  handleStart = () => {\n    const { banjoSettings, melodySettings } = this.state\n\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n    melodyAutoFilter = new Tone.AutoFilter(melodySettings.autoFilter).start()\n    melodyChannel = new Tone.Channel(melodySettings.channel).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyAutoFilter, melodyChannel)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: 'koto-japanese-melody-strings-loop_123bpm_D_minor.wav',\n        A2: 'spanish-guitar-koto-arp-loop_234bpm_F_minor.wav',\n        A3: 'sharingan-koto-melody_130bpm_A_minor.wav',\n        B1: 'spanish-guitar-koto-arp-loop_234bpm_F_minor.wav'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n    }).toDestination()\n\n    banjoChannel = new Tone.Channel(banjoSettings.channel).toDestination()\n    sampler.chain(banjoChannel)\n\n    const banjoPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, banjoSettings.sequence.steps).start(0)\n\n    banjoPart.loopEnd = banjoSettings.sequence.duration\n    banjoPart.loop = true\n\n    Tone.Transport.start()\n  }\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'chorusFrequency') {\n      melodyChorus.frequency.value = value\n      melodySettings.chorus.frequency = value\n    } else if (property === 'chorusDepth') {\n      melodyChorus.depth = value\n      melodySettings.chorus.depth = value\n    } else if (property === 'autoFilterType') {\n      melodyAutoFilter.type = value\n      melodySettings.autoFilter.type = value\n    } else if (property === 'autoFilterFrequency') {\n      melodyAutoFilter.frequency.value = value\n      melodySettings.autoFilter.frequency = value\n    } else if (property === 'autoFilterDepth') {\n      melodyAutoFilter.depth.value = value\n      melodySettings.autoFilter.depth = value\n    } else if (property === 'autoFilterOctaves') {\n      melodyAutoFilter.octaves = value\n      melodySettings.autoFilter.octaves = value\n    }\n    if (property === 'channelVolume') {\n      melodyChannel.volume.value = value\n      melodySettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      melodyChannel.mute = value\n      melodySettings.channel.mute = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  handleBanjoValueChange = (property, value) => {\n    const { banjoSettings } = this.state\n\n    if (property === 'channelVolume') {\n      banjoChannel.volume.value = value\n      banjoSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      const mute = !banjoSettings.channel.mute\n      banjoChannel.mute = mute\n      banjoSettings.channel.mute = mute\n    }\n\n    this.setState({\n      banjoSettings\n    })\n  }\n\n  render() {\n    const { banjoSettings, melodySettings } = this.state\n    const melodyOscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n    //this.updateNodeParams()\n\n    return (\n      <div className=\"Container\">\n        <SC_Button text=\"Start\" handleClick={this.handleStart} />\n\n        <Channel\n          settings={banjoSettings}\n          handleValueChange={this.handleBanjoValueChange}\n        />\n        <Channel\n          settings={melodySettings}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n        <ToneSynth\n          settings={melodySettings}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n\n        <SC_Slider\n          name=\"Wet\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={melodySettings.chorus.wet}\n          property=\"chorusWet\"\n          handleChange={this.handleMelodyValueChange}\n        />\n        <SC_Slider\n          name=\"Frequency\"\n          min={0}\n          max={100}\n          step={0.01}\n          value={melodySettings.chorus.frequency}\n          property=\"chorusFrequency\"\n          handleChange={this.handleMelodyValueChange}\n        />\n        <SC_Slider\n          name=\"Depth\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={melodySettings.chorus.depth}\n          property=\"chorusDepth\"\n          handleChange={this.handleMelodyValueChange}\n        />\n\n        <SC_ToggleButtonSet\n          name=\"Type\"\n          property=\"autoFilterType\"\n          value={melodySettings.autoFilter.type}\n          options={melodyOscillatorTypes}\n          handleChange={this.handleMelodyValueChange}\n        />\n        <SC_Slider\n          name=\"Frequency\"\n          min={0}\n          max={100}\n          step={0.01}\n          value={melodySettings.autoFilter.frequency}\n          property=\"autoFilterFrequency\"\n          handleChange={this.handleMelodyValueChange}\n        />\n        <SC_Slider\n          name=\"Depth\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={melodySettings.autoFilter.depth}\n          property=\"autoFilterDepth\"\n          handleChange={this.handleMelodyValueChange}\n        />\n        <SC_Slider\n          name=\"Octaves\"\n          min={0}\n          max={6}\n          step={0.1}\n          value={melodySettings.autoFilter.octaves}\n          property=\"autoFilterOctaves\"\n          handleChange={this.handleMelodyValueChange}\n        />\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}