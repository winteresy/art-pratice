{"ast":null,"code":"var _jsxFileName = \"/Users/alicegurova/art-pactice/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_10/components/SC_ToggleButton.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport classnames from 'classnames';\nimport React, { PureComponent } from 'react';\n\nvar SC_ToggleButton = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SC_ToggleButton, _PureComponent);\n\n  var _super = _createSuper(SC_ToggleButton);\n\n  function SC_ToggleButton(props) {\n    _classCallCheck(this, SC_ToggleButton);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(SC_ToggleButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          text = _this$props.text,\n          isOn = _this$props.isOn,\n          handleClick = _this$props.handleClick;\n      var classes = classnames({\n        SC_ToggleButton: true,\n        active: isOn\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes,\n        onClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, text);\n    }\n  }]);\n\n  return SC_ToggleButton;\n}(PureComponent);\n\nexport { SC_ToggleButton as default };","map":{"version":3,"names":["classnames","React","PureComponent","SC_ToggleButton","props","text","isOn","handleClick","classes","active"],"sources":["/Users/alicegurova/art-pactice/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_10/components/SC_ToggleButton.jsx"],"sourcesContent":["import classnames from 'classnames'\nimport React, { PureComponent } from 'react'\n\nexport default class SC_ToggleButton extends PureComponent {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const { text, isOn, handleClick } = this.props\n\n    const classes = classnames({\n      SC_ToggleButton: true,\n      active: isOn\n    })\n\n    return (\n      <div className={classes} onClick={handleClick}>\n        {text}\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IAEqBC,e;;;;;EACnB,yBAAYC,KAAZ,EAAmB;IAAA;;IAAA,yBACXA,KADW;EAElB;;;;WAED,kBAAS;MACP,kBAAoC,KAAKA,KAAzC;MAAA,IAAQC,IAAR,eAAQA,IAAR;MAAA,IAAcC,IAAd,eAAcA,IAAd;MAAA,IAAoBC,WAApB,eAAoBA,WAApB;MAEA,IAAMC,OAAO,GAAGR,UAAU,CAAC;QACzBG,eAAe,EAAE,IADQ;QAEzBM,MAAM,EAAEH;MAFiB,CAAD,CAA1B;MAKA,oBACE;QAAK,SAAS,EAAEE,OAAhB;QAAyB,OAAO,EAAED,WAAlC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACGF,IADH,CADF;IAKD;;;;EAlB0CH,a;;SAAxBC,e"},"metadata":{},"sourceType":"module"}