{"ast":null,"code":"export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n  return (nativeContext, channelMergerNode) => {\n    // Bug #15: Safari does not return the default properties.\n    channelMergerNode.channelCount = 1;\n    channelMergerNode.channelCountMode = 'explicit'; // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n\n    Object.defineProperty(channelMergerNode, 'channelCount', {\n      get: () => 1,\n      set: () => {\n        throw createInvalidStateError();\n      }\n    });\n    Object.defineProperty(channelMergerNode, 'channelCountMode', {\n      get: () => 'explicit',\n      set: () => {\n        throw createInvalidStateError();\n      }\n    }); // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n\n    const audioBufferSourceNode = nativeContext.createBufferSource();\n\n    const whenConnected = () => {\n      const length = channelMergerNode.numberOfInputs;\n\n      for (let i = 0; i < length; i += 1) {\n        audioBufferSourceNode.connect(channelMergerNode, 0, i);\n      }\n    };\n\n    const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n\n    monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n  };\n};","map":null,"metadata":{},"sourceType":"module"}