{"ast":null,"code":"import { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\n\nexport class FeedbackEffect extends Effect {\n  constructor(options) {\n    super(options);\n    this.name = \"FeedbackEffect\";\n    this._feedbackGain = new Gain({\n      context: this.context,\n      gain: options.feedback,\n      units: \"normalRange\"\n    });\n    this.feedback = this._feedbackGain.gain;\n    readOnly(this, \"feedback\"); // the feedback loop\n\n    this.effectReturn.chain(this._feedbackGain, this.effectSend);\n  }\n\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      feedback: 0.125\n    });\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._feedbackGain.dispose();\n\n    this.feedback.dispose();\n    return this;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}