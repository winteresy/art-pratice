{"ast":null,"code":"import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current waveform data of the connected audio source.\n * @category Component\n */\n\nexport class Waveform extends MeterBase {\n  constructor() {\n    super(optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]));\n    this.name = \"Waveform\";\n    const options = optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]);\n    this._analyser.type = \"waveform\";\n    this.size = options.size;\n  }\n\n  static getDefaults() {\n    return Object.assign(MeterBase.getDefaults(), {\n      size: 1024\n    });\n  }\n  /**\n   * Return the waveform for the current time as a Float32Array where each value in the array\n   * represents a sample in the waveform.\n   */\n\n\n  getValue() {\n    return this._analyser.getValue();\n  }\n  /**\n   * The size of analysis. This must be a power of two in the range 16 to 16384.\n   * Determines the size of the array returned by [[getValue]].\n   */\n\n\n  get size() {\n    return this._analyser.size;\n  }\n\n  set size(size) {\n    this._analyser.size = size;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}